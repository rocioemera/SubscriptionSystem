<beans:beans 
	xmlns="http://www.springframework.org/schema/security" 
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
		<intercept-url pattern="/customerManage/listPendingRequest.htm" access="hasRole('ADMIN')"/>
		<intercept-url pattern="/customerManage/approveCancellation.htm" access="hasRole('ADMIN')"/>
		<intercept-url pattern="/customerManage/**" access="hasRole('CUSTOMER')"/>
		<intercept-url pattern="/login/**" access="permitAll()" />
		<intercept-url pattern="/home**" access="permitAll()" />
	
		<access-denied-handler error-page="/login/accessDenied.htm" />
		<form-login 
		    login-page="/login/login.htm" 
		    default-target-url="/welcomePage.htm"
			authentication-failure-url="/login/login.htm?error" />
		<logout invalidate-session="true" logout-success-url="/homeView.htm" />
		
	</http>

	<!-- with jdbc driver -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSourceSec"
				users-by-username-query="select USERNAME, PASSWORD, ENABLES from USERS where USERNAME=?"
				authorities-by-username-query="SELECT u.USERNAME, r.ROLDESCRIPTION 
												from USERS u JOIN USER_ROL ur ON u.USER_ID = ur.USER_ID
													JOIN ROL r ON r.ROL_ID = ur.ROL_ID
													where u.USERNAME = ? " /> 
		</authentication-provider>
	</authentication-manager>

<!-- with services  
<authentication-manager>
	<authentication-provider user-service-ref="myUserDetailsService" >
		
	</authentication-provider>
</authentication-manager>
-->
</beans:beans>
